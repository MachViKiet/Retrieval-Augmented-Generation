events {
    worker_connections 1024;
}

http {

    include       mime.types;
    default_type  application/octet-stream;
    client_max_body_size 100M;

    # server {
    #     listen 88;
    #     server_name localhost;

    #     return 301 https://$host$request_uri;
    # }

    server {

        listen 8000;
        server_name localhost;

        # listen 88 ssl;
        # server_name localhost;

        # ssl_certificate /etc/nginx/ssl/client-cert.pem;
        # ssl_certificate_key /etc/nginx/ssl/client-key.pem;

        # # Cấu hình SSL protocols và ciphers
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';

        location / {
            proxy_pass http://client:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy cho WebSocket
        location /socket.io/ {
            proxy_buffers 8 32k;
            proxy_buffer_size 64k;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # enables WS support
            tcp_nodelay on;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_pass http://server:8017;

        }

        # Proxy cho API
        location /api {
            proxy_pass http://server:8017;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /proxy {
            set $target_url $arg_url;

            if ($target_url = "") {
                return 400 "Missing URL parameter";  # Trả về lỗi nếu không có tham số URL
            }
            resolver 8.8.8.8;
            proxy_set_header X-Custom-Header "Custom-Header-Value";
            proxy_pass $target_url;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_buffering off;
            proxy_cache off;
            proxy_redirect off;
        }
    }
}
